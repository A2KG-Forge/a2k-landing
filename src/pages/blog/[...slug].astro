---
import { type CollectionEntry, getCollection, render } from 'astro:content';
import BlogPost from '@/layouts/BlogPost.astro';

export async function getStaticPaths() {
	const posts = await getCollection('blog');
	const sortedPosts = posts.sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());
	
	return sortedPosts.map((post, index) => {
		const prevPost = index < sortedPosts.length - 1 ? sortedPosts[index + 1] : null;
		const nextPost = index > 0 ? sortedPosts[index - 1] : null;
		
		return {
			params: { slug: post.id },
			props: {
				...post,
				prevPost: prevPost ? {
					url: `/blog/${prevPost.id}/`,
					title: prevPost.data.title
				} : null,
				nextPost: nextPost ? {
					url: `/blog/${nextPost.id}/`,
					title: nextPost.data.title
				} : null,
			},
		};
	});
}

type Props = CollectionEntry<'blog'> & {
	prevPost?: {
		url: string;
		title: string;
	};
	nextPost?: {
		url: string;
		title: string;
	};
};

const { prevPost, nextPost, ...post } = Astro.props as Props;
const { Content } = await render(post);
---

<BlogPost {...post.data} prevPost={prevPost} nextPost={nextPost}>
	<Content />
</BlogPost>
